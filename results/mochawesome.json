{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2024-11-12T04:21:06.000Z",
    "end": "2024-11-12T04:21:11.891Z",
    "duration": 5891,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "393bd331-bf24-463f-bfb9-a034dd8894ec",
      "title": "",
      "fullFile": "cypress\\tests\\authen\\LoginTest.js",
      "file": "cypress\\tests\\authen\\LoginTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7e3a9c23-2541-4d9d-8f9f-c9b98bb756a6",
          "title": "Login Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to login with correct creds",
              "fullTitle": "Login Test should be able to login with correct creds",
              "timedOut": null,
              "duration": 3906,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "headerComp.loginLink().click({\n  force: true\n});\ncy.get('#logInModal form').should('be.visible');\ncy.get('#loginusername').type(`${LOGIN_CRED.username}`, {\n  force: true,\n  waitForAnimations: true\n});\ncy.get('#loginpassword').type(`${LOGIN_CRED.password}`, {\n  force: true,\n  waitForAnimations: true\n});\ncy.get('[onclick=\"logIn()\"]').click({\n  force: true\n});\ncy.get('#nameofuser').should('be.visible');\ncy.get('#nameofuser').should('contain.text', `Welcome ${LOGIN_CRED.username}`);\ncy.on('window: alert', () => {\n  expect(alert).to.contains(\"User does not exits.\");\n});",
              "err": {},
              "uuid": "36dcc3ab-b741-45eb-9f14-9d3f0bf461cb",
              "parentUUID": "7e3a9c23-2541-4d9d-8f9f-c9b98bb756a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to see wrong username",
              "fullTitle": "Login Test should be able to see wrong username",
              "timedOut": null,
              "duration": 940,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "headerComp.loginLink().click({\n  force: true\n});\ncy.get('#logInModal form').should('be.visible');\ncy.get('#loginusername').type(`${LOGIN_CRED.username}_WRONG`, {\n  force: true,\n  waitForAnimations: true\n});\ncy.get('#loginpassword').type(`${LOGIN_CRED.password}`, {\n  force: true,\n  waitForAnimations: true\n});\ncy.get('[onclick=\"logIn()\"]').click({\n  force: true\n});\ncy.on('window: alert', alert => {\n  expect(alert).to.contains(\"User does not exits.\");\n});",
              "err": {},
              "uuid": "5abf2bb3-31e8-41b9-b881-1c8c994c0d3f",
              "parentUUID": "7e3a9c23-2541-4d9d-8f9f-c9b98bb756a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to see wrong password",
              "fullTitle": "Login Test should be able to see wrong password",
              "timedOut": null,
              "duration": 940,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "headerComp.loginLink().click({\n  force: true\n});\ncy.get('#logInModal form').should('be.visible');\ncy.get('#loginusername').type(`${LOGIN_CRED.username}`, {\n  force: true,\n  waitForAnimations: true\n});\ncy.get('#loginpassword').type(`${LOGIN_CRED.password}_WRONG`, {\n  force: true,\n  waitForAnimations: true\n});\ncy.get('[onclick=\"logIn()\"]').click({\n  force: true\n});\ncy.on('window: alert', alert => {\n  expect(alert).to.contains(\"User does not exits.\");\n});",
              "err": {},
              "uuid": "76a48081-8987-4a82-bcff-1bfea7680119",
              "parentUUID": "7e3a9c23-2541-4d9d-8f9f-c9b98bb756a6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "36dcc3ab-b741-45eb-9f14-9d3f0bf461cb",
            "5abf2bb3-31e8-41b9-b881-1c8c994c0d3f",
            "76a48081-8987-4a82-bcff-1bfea7680119"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5786,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}