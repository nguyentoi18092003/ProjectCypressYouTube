{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-11-12T05:45:03.135Z",
    "end": "2024-11-12T05:45:04.532Z",
    "duration": 1397,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a0442d98-f31a-4dce-9b59-7393d53c89a0",
      "title": "",
      "fullFile": "cypress\\tests\\components\\FooterTest.js",
      "file": "cypress\\tests\\components\\FooterTest.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4781ef7f-3a70-4b9b-acd6-eb49a6bfe937",
          "title": "Footer Component Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test for brand logo",
              "fullTitle": "Footer Component Test Test for brand logo",
              "timedOut": null,
              "duration": 1323,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let expectedDataUs = {};\ncy.fixture('getAboutUsdata').then(data => {\n  expectedDataUs = data;\n});\nfooterComp.getAboutUsdata().then(actualAboutUsData => {\n  cy.log(cy.log(JSON.stringify(actualAboutUsData)));\n  cy.wrap('').then(() => {\n    // expect (actualAboutUsData.header).to.equal(expectedDataUs.header);\n    // expect (actualAboutUsData.desc).to.equal(expectedDataUs.desc);\n    expect(actualAboutUsData).to.eql(expectedDataUs);\n  });\n});",
              "err": {},
              "uuid": "6b0eff65-d6f8-4920-85ed-a20c5f9f7480",
              "parentUUID": "4781ef7f-3a70-4b9b-acd6-eb49a6bfe937",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b0eff65-d6f8-4920-85ed-a20c5f9f7480"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1323,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}